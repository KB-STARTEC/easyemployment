[{"F:\\coding\\meron\\client\\src\\index.js":"1","F:\\coding\\meron\\client\\src\\App.js":"2","F:\\coding\\meron\\client\\src\\components\\Posts\\Post\\post.js":"3","F:\\coding\\meron\\client\\src\\components\\Posts\\Posts.js":"4","F:\\coding\\meron\\client\\src\\components\\Form\\styles.js":"5","F:\\coding\\meron\\client\\src\\components\\Posts\\Post\\styles.js":"6","F:\\coding\\meron\\client\\src\\components\\Form\\Form.js":"7","F:\\coding\\meron\\client\\src\\components\\Posts\\Post\\Post.js":"8","F:\\coding\\meron\\client\\src\\styles.js":"9","F:\\coding\\meron\\client\\src\\reducers\\index.js":"10","F:\\coding\\meron\\client\\src\\actions\\posts.js":"11","F:\\coding\\meron\\client\\src\\api\\index.js":"12","F:\\coding\\meron\\client\\src\\reducers\\posts.js":"13","F:\\coding\\meron\\client\\src\\components\\Posts\\styles.js":"14","F:\\coding\\meron\\client\\src\\constants\\actionTypes.js":"15"},{"size":465,"mtime":1604056512000,"results":"16","hashOfConfig":"17"},{"size":1368,"mtime":1606833966231,"results":"18","hashOfConfig":"17"},{"size":2094,"mtime":1606771164645,"results":"19","hashOfConfig":"17"},{"size":695,"mtime":1604056512000,"results":"20","hashOfConfig":"17"},{"size":426,"mtime":1604056512000,"results":"21","hashOfConfig":"17"},{"size":964,"mtime":1606842733264,"results":"22","hashOfConfig":"17"},{"size":3145,"mtime":1606849915973,"results":"23","hashOfConfig":"17"},{"size":2143,"mtime":1606842905317,"results":"24","hashOfConfig":"17"},{"size":356,"mtime":1606834247395,"results":"25","hashOfConfig":"17"},{"size":124,"mtime":1604056512000,"results":"26","hashOfConfig":"17"},{"size":1214,"mtime":1604056512000,"results":"27","hashOfConfig":"17"},{"size":526,"mtime":1607683682648,"results":"28","hashOfConfig":"17"},{"size":600,"mtime":1604056512000,"results":"29","hashOfConfig":"17"},{"size":266,"mtime":1604056512000,"results":"30","hashOfConfig":"17"},{"size":162,"mtime":1604056512000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"14a0118",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\coding\\meron\\client\\src\\index.js",[],["67","68"],"F:\\coding\\meron\\client\\src\\App.js",[],["69","70"],"F:\\coding\\meron\\client\\src\\components\\Posts\\Post\\post.js",[],"F:\\coding\\meron\\client\\src\\components\\Posts\\Posts.js",[],"F:\\coding\\meron\\client\\src\\components\\Form\\styles.js",[],"F:\\coding\\meron\\client\\src\\components\\Posts\\Post\\styles.js",[],"F:\\coding\\meron\\client\\src\\components\\Form\\Form.js",["71"],"import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper , MenuItem ,Select ,InputLabel} from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({ salary: '', name: '', dateofbirth: '', gender: '', selectedFile: '' });\n  const post = useSelector((state) => (currentId ? state.posts.find((dateofbirth) => dateofbirth._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ salary: '', name: '', dateofbirth: '', gender: '', selectedFile: '' });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost(postData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.name}\"` : 'Add Employees'}</Typography>\n        <TextField name=\"name\" variant=\"outlined\" label=\"name\" fullWidth value={postData.name} onChange={(e) => setPostData({ ...postData, name: e.target.value })} />\n        <TextField name=\"salary\" variant=\"outlined\" label=\"salary\" fullWidth value={postData.salary} onChange={(e) => setPostData({ ...postData, salary: e.target.value })} />\n        <InputLabel id=\"demo-controlled-open-select-label\"> Birth : \n        <input  id=\"date\"\n        label=\"Birthday\"\n        type=\"date\"\n          name=\"dateofbirth\" variant=\"outlined\" label=\"dateofbirth\" value={postData.dateofbirth} onChange={(e) => setPostData({ ...postData, dateofbirth: e.target.value })} />\n        </InputLabel>\n        <InputLabel id=\"demo-controlled-open-select-label\">Gender :\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\" name=\"gender\"  label=\"gender\"  value={postData.gender} onChange={(e) => setPostData({ ...postData, gender: e.target.value.split(',') })}>\n          <MenuItem value=\"Male\" >Male</MenuItem>\n          <MenuItem value=\"Female\">Female</MenuItem>\n          \n        </Select></InputLabel>\n        <InputLabel id=\"demo-controlled-open-select-label\">Add Photo\n\n           <div className={classes.fileInput}><FileBase variant=\"contained\" color=\"secondary\" type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n        </InputLabel>\n        <Button className={classes.buttonSubmit} variant=\"outlined\" color=\"secondary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n","F:\\coding\\meron\\client\\src\\components\\Posts\\Post\\Post.js",[],"F:\\coding\\meron\\client\\src\\styles.js",[],"F:\\coding\\meron\\client\\src\\reducers\\index.js",[],["72","73"],"F:\\coding\\meron\\client\\src\\actions\\posts.js",[],"F:\\coding\\meron\\client\\src\\api\\index.js",[],"F:\\coding\\meron\\client\\src\\reducers\\posts.js",["74"],"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nexport default (posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n    case LIKE:\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case CREATE:\n      return [...posts, action.payload];\n    case UPDATE:\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case DELETE:\n      return posts.filter((post) => post._id !== action.payload);\n    default:\n      return posts;\n  }\n};\n\n","F:\\coding\\meron\\client\\src\\components\\Posts\\styles.js",[],"F:\\coding\\meron\\client\\src\\constants\\actionTypes.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"75","replacedBy":"79"},{"ruleId":"77","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":46,"column":49,"nodeType":"83","endLine":46,"endColumn":68},{"ruleId":"75","replacedBy":"84"},{"ruleId":"77","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":3,"column":1,"nodeType":"88","endLine":18,"endColumn":3},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],["89"],["90"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["89"],["90"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]